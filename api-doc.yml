swagger: "2.0"
info:
  description: ""
  version: "0.1.0"
  title: "CMRS 接口描述文档"
  termsOfService: "http://117.78.6.206:9580"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "139.159.162.133:9580"
basePath: "/"
tags:
  - name: "用户认证"
  - name: "用户维护自己信息"
  - name: "管理员维护自己信息"
  - name: "管理员维护用户信息"
  - name: "管理员维护餐厅的基本信息"
  - name: "管理员维护餐厅的菜单信息"
  - name: "点餐员维护点餐团信息"
schemes:
  - http
security:
  - CMRSSecurity: []
consumes:
  - application/json
produces:
  - application/json
paths:
  /sign-in-with-password:
    post:
      security: []
      tags:
        - "用户认证"
      summary: "用户使用密码进行登录"
      parameters:
        - in: body
          name: "使用密码登录命令"
          description: "用户提交的认证信息"
          required: true
          schema:
            $ref: "#/definitions/SignInWithPasswordCommand"
      responses:
        200:
          description: "登录成功"
          schema:
            $ref: "#/definitions/UserSignInDTO"
        401:
          headers:
            X-BIZ-CODE:
              type: string
              description: "40101"
          description: "认证失败"
          schema:
            $ref: "#/definitions/EX40101"
  /logout:
    post:
      tags:
        - "用户认证"
      summary: "用户退出登录"
      responses:
        204:
          description: "退出登录成功"
  /get-self-details:
    get:
      tags:
        - "用户维护自己信息"
      summary: "用户查询自己的详细信息"
      responses:
        200:
          description: "查询成功"
          schema:
            $ref: "#/definitions/UserDetails"
  /update-self-password:
    post:
      tags:
        - "管理员维护自己信息"
      summary: "管理员更新自己的密码"
      parameters:
        - in: body
          name: "管理员更新自己的密码命令"
          required: true
          schema:
            $ref: "#/definitions/UpdateUserPasswordCommand"
      responses:
        204:
          description: "退出登录成功"
  /get-role-list:
    get:
      tags:
        - "管理员维护用户信息"
      summary: "管理员获取角色列表"
      parameters:
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: "#/definitions/RoleDetailsView"
              pageInfo:
                $ref: "#/definitions/PageInfo"
  /get-all-roles:
    get:
      tags:
        - "管理员维护用户信息"
      summary: "管理员查询全部角色"
      responses:
        200:
          description: "查询成功"
          schema:
            type: array
            items:
              $ref: "#/definitions/RoleDetailsView"
  /set-roles-to-user/:userId:
    post:
      tags:
        - "管理员维护用户信息"
      summary: "管理员为用户设置角色"
      parameters:
        - name: "userId"
          type: string
          in: path
          required: true
        - in: body
          name: "设置角色命令"
          description: "超级管理员或者用户管理员为用户设置角色"
          required: true
          schema:
            $ref: "#/definitions/SetRolesToUserCommand"
      responses:
        204:
          description: "分配角色成功"
        400:
          headers:
            X-BIZ-CODE:
              type: string
          description: "请求数据异常"
          schema:
            $ref: "#/definitions/EX40001"
  /update-details-of-user/:userId:
    post:
      tags:
        - "管理员维护用户信息"
      summary: "管理员更新用户信息"
      parameters:
        - name: "userId"
          type: string
          required: true
          in: path
        - in: body
          name: "更新用户信息命令"
          description: "超级管理员或者用户管理员更新用户信息"
          required: true
          schema:
            $ref: '#/definitions/UpdateUserDetailsCommand'
      responses:
        204:
          description: "更新成功"
        404:
          description: "指定的用户不存在"
  /update-user/:userId/password/:passwordId:
    post:
      tags:
        - "管理员维护用户信息"
      summary: "管理员更新用户密码"
      parameters:
        - name: "userId"
          type: string
          in: path
          required: true
        - name: "userPasswordId"
          type: string
          in: path
          required: true
        - in: body
          name: "更新用户信息命令"
          description: "超级管理员或者用户管理员新用户密码"
          required: true
          schema:
            $ref: '#/definitions/UpdateUserPasswordCommand'
      responses:
        204:
          description: "更新成功"
        404:
          description: "指定的用户不存在"
  /create-clerk:
    post:
      tags:
        - "管理员维护用户信息"
      summary: "管理员创建职员接口"
      parameters:
        - in: body
          name: "管理员创建职员命令"
          required: true
          schema:
            $ref: "#/definitions/CreateClerkWithUsernameCommand"
      responses:
        200:
          description: "创建职员成功"
          schema:
            $ref: "#/definitions/AggregateCreatedDTO"
  /get-user-details/:id:
    get:
      tags:
        - "管理员维护用户信息"
      summary: "管理员查询用户详情接口"
      parameters:
        - name: "id"
          in: path
          required: true
          type: string
          description: "要查询的用户ID"
      responses:
        200:
          description: "查询成功"
          schema:
            $ref: '#/definitions/UserDetails'
  /get-user-list:
    get:
      tags:
        - "管理员维护用户信息"
      summary: "管理员查询用户信息列表接口"
      parameters:
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: "#/definitions/UserDetails"
              pageInfo:
                $ref: "#/definitions/PageInfo"
  /create-restaurant:
    post:
      tags:
        - "管理员维护餐厅的基本信息"
      summary: "管理员创建餐厅接口"
      parameters:
        - in: body
          name: "管理员创建餐厅命令"
          required: true
          schema:
            $ref: "#/definitions/CreateRestaurantCommand"
      responses:
        200:
          description: "创建餐厅成功"
          schema:
            $ref: "#/definitions/AggregateCreatedDTO"
  /update-details-of-restaurant/:restId:
    post:
      tags:
        - "管理员维护餐厅的基本信息"
      summary: "管理员更新餐厅接口"
      parameters:
        - name: "restId"
          type: string
          in: path
          required: true
          description: "餐厅ID"
        - name: "管理员更新餐厅命令"
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateRestaurantCommand"
      responses:
        204:
          description: "更新成功"
  /get-restaurant-list:
    get:
      tags:
        - "管理员维护餐厅的基本信息"
      summary: "管理员查询餐厅列表接口"
      parameters:
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: "#/definitions/RestaurantDetails"
              pageInfo:
                $ref: "#/definitions/PageInfo"
  /get-details-of-restaurant/:id:
    get:
      tags:
        - "管理员维护餐厅的基本信息"
      summary: "餐厅管理员查询餐厅接口"
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: "要查询的餐厅ID"
      responses:
        200:
          description: "查询成功"
          schema:
            $ref: '#/definitions/RestaurantDetails'
  /create-single-menu-item:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "创建单品菜单项接口"
      parameters:
        - in: body
          name: "创建单品菜单命令"
          required: true
          schema:
            $ref: "#/definitions/CreateSingleMenuItemCommand"
      responses:
        200:
          description: "创建单品菜单项成功"
          schema:
            $ref: "#/definitions/AggregateCreatedDTO"
  /create-set-menu-item:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "创建套餐菜单项接口"
      parameters:
        - name: "创建单品菜单命令"
          in: body
          required: true
          schema:
            $ref: "#/definitions/CreateSetMenuItemCommand"
      responses:
        200:
          description: "创建套餐菜单项成功"
          schema:
            $ref: "#/definitions/AggregateCreatedDTO"
  /update-restaurant/:restId/single-menu-item/:itemId:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "更新单品菜单项接口"
      parameters:
        - name: "restId"
          in: path
          required: true
          type: string
          description: "菜单项所属菜单餐厅ID"
        - name: "itemId"
          in: path
          required: true
          type: string
          description: "菜单项ID"
        - name: "更新单品菜单项命令"
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateSingleMenuItemCommand"
      responses:
        204:
          description: "更新单品菜单项成功"
  /update-restaurant/:restId/set-menu-item/:itemId:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "更新套餐菜单项接口"
      parameters:
        - name: "restId"
          in: path
          required: true
          type: string
          description: "菜单项所属菜单餐厅ID"
        - name: "itemId"
          in: path
          required: true
          type: string
          description: "菜单项ID"
        - name: "更新套餐菜单项命令"
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateSetMenuItemCommand"
      responses:
        204:
          description: "更新单品菜单项成功"
  /get-all-dish-type:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "获取所有菜品接口"
      responses:
        200:
          description: "查询成功"
          schema:
            type: array
            items:
              $ref: "#/definitions/DishType"
  /get-all-taste:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "获取所有口味接口"
      responses:
        200:
          description: "查询成功"
          schema:
            type: array
            items:
              $ref: "#/definitions/Taste"
  /get-all-menu-item-type:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "获取所有菜单项接口类型接口"
      responses:
        200:
          description: "查询成功"
          schema:
            type: array
            items:
              $ref: "#/definitions/MenuItemType"
  /get-restaurant/:id/single-menu-item-list:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "管理员获取单品菜单项分页列表"
      parameters:
        - name: "id"
          type: string
          in: path
          required: true
          description: "菜单项所属餐厅ID"
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: "#/definitions/SingleMenuItemDetails"
              pageInfo:
                $ref: "#/definitions/PageInfo"
  /get-restaurant/:id/all-single-menu-items:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "管理员获取所有单品菜单项"
      parameters:
        - name: "id"
          type: string
          in: path
          required: true
          description: "菜单项所属餐厅ID"
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: array
            items:
              $ref: "#/definitions/SingleMenuItemDetails"
  /get-restaurant/:id/set-menu-item-list:
    get:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "管理员获取套餐菜单项分页列表"
      parameters:
        - name: "id"
          type: string
          in: path
          required: true
          description: "菜单项所属餐厅ID"
        - name: "page"
          type: integer
          in: query
          description: "页码"
        - name: "size"
          type: integer
          in: query
          description: "页面最大记录数"
      responses:
        200:
          description: "查询成功"
          schema:
            type: object
            properties:
              content:
                type: array
                items:
                  $ref: "#/definitions/SetMunuItemDetails"
              pageInfo:
                $ref: "#/definitions/PageInfo"
  /add-items-to-set-menu-item/:setMenuItemId:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "为套餐添加单品菜单项接口"
      parameters:
        - name: "setMenuItemId"
          type: string
          in: path
          required: true
          description: "套餐菜单项ID"
        - name: "为套餐添加单品菜单项命令"
          in: body
          required: true
          schema:
            $ref: "#/definitions/AddItemsToSetMenuItemCommand"
      responses:
        204:
          description: "添加成功"
  /delete-single-menu-item/:menuItemId/of-restaurant/:restId:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "管理员删除某个餐厅的某个单品接口"
      parameters:
        - name: "menuItemId"
          in: path
          required: true
          type: string
          description: "单品菜单项ID"
        - name: "restId"
          in: path
          required: true
          type: string
          description: "餐厅ID"
      responses:
        204:
          description: "删除成功"
        400:
          headers:
            X-BIZ-CODE:
              type: string
              description: "40007"
          description: "请求格式有误"
          schema:
            $ref: "#/definitions/EX40007"
  /delete-set-menu-item/:menuItemId/of-restaurant/:restId:
    post:
      tags:
        - "管理员维护餐厅的菜单信息"
      summary: "管理员删除某个餐厅的某个套餐接口"
      parameters:
        - name: "menuItemId"
          in: path
          required: true
          type: string
          description: "套餐菜单项ID"
        - name: "restId"
          in: path
          required: true
          type: string
          description: "餐厅ID"
      responses:
        204:
          description: "删除成功"
        400:
          headers:
            X-BIZ-CODE:
              type: string
              description: "40007"
          description: "请求格式有误"
          schema:
            $ref: "#/definitions/EX40007"
  /update-self-details:
    post:
      tags:
        - "用户维护自己信息"
      summary: "用户（所有角色）更新个人信息接口"
      parameters:
        - name: "更新用户自己的信息"
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUserSelfDetailsDTO"
      responses:
        204:
          description: "更新成功"
  /create-mr-group:
    post:
      tags:
        - "点餐员维护点餐团信息"
      summary: "点餐员创建点参团接口"
      parameters:
        - name: "点参团创建信息"
          in: body
          required: true
          schema:
            $ref: "#/definitions/CreateMealReservationGroupDTO"
      responses:
        200:
          description: "创建成功"
          schema:
            $ref: "#/definitions/AggregateCreatedDTO"
  /get-details-of-mr-group/:id:
    get:
      tags:
        - "用户查看点餐团信息"
      summary: "用户查看点参团信息接口"
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: "查询成功"
          schema:
            $ref: "#/definitions/MealReservationGroupDetailsDTO"
  /get-members-of-mr-group/:id:
    get:
      tags:
        - "用户查看点餐团成员列表"
      summary: "用户查看点参团信息接口"
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: "查询成功"
          schema:
            $ref: "#/definitions/MRGroupMemberPageDTO"
securityDefinitions:
  CMRSSecurity:
    type: apiKey
    in: header
    name: Authorization
definitions:
  SignInWithPasswordCommand:
    type: object
    properties:
      idInAccountType:
        type: string
        description: "某种账号类型中的唯一标识"
        example: "admin"
      accountType:
        type: integer
        enum:
          - 0
        description: "目前只有一种账号类型：用户名（username），值为0"
        example: 0
      password:
        type: string
        description: "密码值需要md5"
        example: "0192023a7bbd73250516f069df18b500"
    required:
      - idInAccountType
      - accountType
      - password
  CreateClerkWithUsernameCommand:
    type: object
    properties:
      username:
        type: string
        example: "zhangsan"
      realName:
        type: string
        example: "张三"
      password:
        type: string
        example: "babd4a84418fb04015ac773f7459727c"
    required:
      - username
      - realName
      - password
  SetRolesToUserCommand:
    type: object
    properties:
      roleIdList:
        type: array
        items:
          type: string
          example:
            - "a71ed7a7ee2cf1555a77038538c2c68c"
            - "t54327a7ee2cf1555a77038538c2c68c"
    required:
      - userId
      - roleId
  UpdateUserDetailsCommand:
    type: object
    properties:
      id:
        type: string
        example: "b6bdf1c1-5094-45d8-ad1d-231e0f19b48b"
      realName:
        type: string
        example: "李四"
    required:
      - id
      - realName
  UpdateUserPasswordCommand:
    type: object
    properties:
      newUserPassword:
        type: string
        description: "密码md5哈希后的字符串"
        example: "babd4a84418fb04015ac773f7459727c"
    required:
      - newUserPassword
  CreateRestaurantCommand:
    type: object
    properties:
      name:
        type: string
        description: "餐厅名称"
        example: "四季餐厅"
      description:
        type: string
        description: "餐厅介绍"
        example: "四季餐厅的介绍"
    required:
      - name
      - description
  UpdateRestaurantCommand:
    type: object
    properties:
      name:
        type: string
        description: "餐厅名称"
        example: "四季餐厅"
      description:
        type: string
        description: "餐厅介绍"
        example: "四季餐厅的介绍"
  CreateSingleMenuItemCommand:
    type: object
    properties:
      restaurantId:
        type: string
        example: "f52bb20a-45f0-44c1-b424-e2637e2c2d3e"
      name:
        type: string
        example: "萝卜丸子汤"
      dishTypeId:
        type: string
        example: "1ab7d23f-5857-4d0b-9f19-dbde727c08bf"
      tasteId:
        type: string
        example: null
      price:
        type: number
        example: 15.5
    required:
      - restaurantId
      - name
      - dishTypeId
      - price
  CreateSetMenuItemCommand:
    type: object
    properties:
      restaurantId:
        type: string
        example: "f52bb20a-45f0-44c1-b424-e2637e2c2d3e"
      name:
        type: string
        example: "商务简餐"
      price:
        type: number
        description: "套餐的定价，一般会比总价低"
        example: 25.5
      subItems:
        type: array
        items:
          type: object
          properties:
            singleMenuItemId:
              type: string
              example: "7de43c37-714c-49e7-8a56-a35a29e2e552"
            quantity:
              type: integer
              example: 2
    required:
      - restaurantId
      - name
      - price
      - subItems
  UpdateSingleMenuItemCommand:
    type: object
    properties:
      name:
        type: string
        example: "西湖牛肉羹"
      dishTypeId:
        type: string
        example: "1ab7d23f-5857-4d0b-9f19-dbde727c08bf"
      tasteId:
        type: string
        example: "97ff7f12-f28b-416a-9600-f8927b0fb281"
      price:
        type: number
        example: 12.5
      onShelve:
        type: boolean
        example: true
  UpdateSetMenuItemCommand:
    type: object
    properties:
      name:
        type: string
        example: "情侣套餐"
      price:
        type: number
        example: 15.5
      onShelve:
        type: boolean
        example: false
      subItems:
        type: array
        items:
          type: object
          properties:
            singleMenuItemId:
              type: string
              example: "97ff7f12-f28b-416a-9600-f8927b0fb281"
            quantity:
              type: integer
              example: 1
  UserSignInDTO:
    type: object
    properties:
      token:
        type: string
        example: "2f83252d-ab8b-4568-ad12-7a758f6e9f43"
      userId:
        type: string
        example: "a8d17dcb-49dd-4e68-8c75-db20eb28b258"
  AggregateCreatedDTO:
    type: object
    properties:
      code:
        type: string
        example: "20000"
      data:
        type: object
        properties:
          id:
            type: string
            example: "b6bdf1c1-5094-45d8-ad1d-231e0f19b48b"
  UserDetails:
    type: object
    properties:
      id:
        type: string
        example: "2f83252d-ab8b-4568-ad12-7a758f6e9f43"
      realName:
        type: string
        example: "超级管理员"
      accountViewList:
        type: array
        items:
          $ref: "#/definitions/AccountView"
      roleViewList:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              example: "9fdd4a72bdfe15c619db8e526968da25"
            name:
              type: string
              example: "ROLE_SUPER_ADMIN"
            createdAt:
              type: string
              example: "2019-07-12T14:32:41.358+0000"
      userSessionId:
        type: string
        description: "会话ID，和Token相同"
        example: "cbf6416f-f055-484b-aeda-bb501bde67ee"
      userSessionExpiredAt:
        type: string
        example: "2019-07-21T15:15:33.482+0000"
      userPasswordId:
        type: string
        example: "e988ad63-5472-4688-b2d8-c67964e6ec77"
      createdAt:
        type: string
        example: "2019-07-12T14:32:41.358+0000"
      updatedAt:
        type: string
        example: null
  AccountView:
    type: object
    properties:
      id:
        type: string
        example: "7a0376b3219c4d1d5447c70cccde4f9e"
      idInType:
        type: string
        example: "admin"
      type:
        type: string
        example: "USERNAME"
      createdAt:
        type: string
        example: "2019-06-17T23:22:00.255+0000"
      updatedAt:
        type: string
        example: "null"
  RoleDetailsView:
    type: object
    properties:
      id:
        type: string
        example: "100b330ecc4c3aafc54092721999239f"
      name:
        type: string
        enum:
          - "ROLE_SUPER_ADMIN"
          - "ROLE_USER_ADMIN"
          - "ROLE_REST_ADMIN"
          - "ROLE_CLERK"
          - "ROLE_ORDER_TAKER"
        example: "ROLE_USER_ADMIN"
      localName:
        type: string
        example: "用户管理员"
      createdAt:
        type: string
        example: "2019-06-24T23:39:18.338+0000"
      updatedAt:
        type: string
        example: null
  RestaurantDetails:
    type: object
    properties:
      id:
        type: object
        example: "566791e4-255a-41f6-b6b3-a8fc85e6f6bd"
      name:
        type: object
        example: "四季餐厅"
      description:
        type: object
        example: "四季餐厅的介绍"
      creatorId:
        type: object
        description: "餐厅创建人的用户ID"
        example: "e82454f7-2683-4af5-aab5-36490360870c"
      creatorRealName:
        type: object
        description: "餐厅创建人的姓名"
        example: "张三"
      createdAt:
        type: object
        example: "2019-07-09T14:09:29.997+0000"
      updatedAt:
        type: string
        example: null
  PageInfo:
    type: object
    properties:
      totalElements:
        type: integer
        example: 5
      totalPages:
        type: integer
        example: 1
      number:
        description: "当前页码"
        type: integer
        example: 0
      size:
        description: "页面最大记录条数"
        type: integer
        example: 20
  DishType:
    type: object
    properties:
      id:
        type: string
        example: "ffa92821-51d2-488e-b484-b46dd588cb5c"
      name:
        type: string
        example: "SOUP"
        description: "菜品类型分为汤（SOUP）、米饭（RICE）、面食（PASTA）、饮料（DRINKS）、菜（DISH）、甜点（DESSERT）"
        enum:
          - "SOUP"
          - "RICE"
          - "PASTA"
          - "DRINKS"
          - "DISH"
          - "DESSERT"
      localName:
        type: string
        example: "汤"
      createdAt:
        type: string
        example: "2019-07-19T15:05:32.642+0000"
      updatedAt:
        type: string
        example: null
  MenuItemType:
    type: object
    properties:
      id:
        type: string
        example: "ffa92821-51d2-488e-b484-b46dd588cb5c"
      name:
        type: string
        example: "SINGLE"
        description: "单品（SINGLE）、套餐（SET）"
        enum:
          - "SINGLE"
          - "SET"
      localName:
        type: string
        example: "单品"
      createdAt:
        type: string
        example: "2019-07-19T15:05:32.642+0000"
      updatedAt:
        type: string
        example: null
  Taste:
    type: object
    properties:
      id:
        type: string
        example: "ffa92821-51d2-488e-b484-b46dd588cb5c"
      name:
        type: string
        example: "SWEET"
        description: "甜（SWEET）、酸（SOUR）、辣（HOT）"
        enum:
          - "SWEET"
          - "SOUR"
          - "HOT"
      localName:
        type: string
        example: "甜"
      createdAt:
        type: string
        example: "2019-07-19T15:05:32.642+0000"
      updatedAt:
        type: string
        example: null
  SingleMenuItemDetails:
    type: object
    properties:
      id:
        type: string
        example: "dc80b746-d889-45c9-8c5e-4b35257c871d"
      restaurantId:
        type: string
        example: "f52bb20a-45f0-44c1-b424-e2637e2c2d3e"
      name:
        type: string
        example: "番茄蛋汤"
      menuItemTypeId:
        type: string
        example: "f17aa9e0-0115-4bc6-a98e-8ad5500651f8"
      menuItemTypeName:
        type: string
        example: "SINGLE"
      localMenuItemTypeName:
        type: string
        example: "单品"
      dishTypeId:
        type: string
        example: "1ab7d23f-5857-4d0b-9f19-dbde727c08bf"
      dishTypeName:
        type: string
        example: "SOUP"
      localDishTypeName:
        type: string
        example: "汤"
      tasteId:
        type: string
        example: "e1c34caf-2b3f-4005-85e3-c4105347728d"
      tasteName:
        type: string
        example: "SOUR"
      localTasteName:
        type: string
        example: "酸"
      price:
        type: number
        example: 10.5
      onShelve:
        description: "是否已上架"
        type: boolean
        example: false
      createdAt:
        type: string
        example: "2019-07-13T14:41:29.468+0000"
      updatedAt:
        type: string
        example: null
  SetMunuItemDetails:
    type: object
    properties:
      id:
        type: string
        example: "dc80b746-d889-45c9-8c5e-4b35257c871d"
      restaurantId:
        type: string
        example: "f52bb20a-45f0-44c1-b424-e2637e2c2d3e"
      name:
        type: string
        example: "商务简餐"
      menuItemTypeId:
        type: string
        example: "f17aa9e0-0115-4bc6-a98e-8ad5500651f8"
      menuItemName:
        type: string
        example: "SET"
      price:
        type: number
        example: 25.5
      onShelve:
        description: "是否已上架"
        type: boolean
        example: false
      singleMenuItems:
        type: array
        items:
          $ref: '#/definitions/SingleMenuItemDetails'
      createdAt:
        type: string
        example: "2019-07-13T14:41:29.468+0000"
      updatedAt:
        type: string
        example: null
  AddItemsToSetMenuItemCommand:
    type: object
    properties:
      itemsId:
        type: array
        items:
          type: string
          example:
            - "fe925f17-7746-41fd-b420-1268e60b5910"
            - "dc80b746-d889-45c9-8c5e-4b35257c871d"
  RemoveItemsFromSetMenuItemCommand:
    type: object
    properties:
      singleItemsIdList:
        type: array
        items:
          type: string
          example:
            - "fe925f17-7746-41fd-b420-1268e60b5910"
            - "dc80b746-d889-45c9-8c5e-4b35257c871d"
  UpdateUserSelfDetailsDTO:
    type: object
    properties:
      id:
        type: string
        example: "b6bdf1c1-5094-45d8-ad1d-231e0f19b48b"
      realName:
        type: string
        example: "李四"
    required:
      - id
      - realName
  CreateMealReservationGroupDTO:
    type: object
    properties:
      name:
        type: string
        minLength: 4
        maxLength: 8
        example: "我的点参团"
      members:
        type: array
        items:
          type: string
          example:
            - "dc80b746-d889-45c9-8c5e-4b35257c871d"
  MealReservationGroupDetailsDTO:
    type: object
    properties:
      name:
        type: string
        example: "我的点餐团"
      orderTakers:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            realName:
              type: string
            joinedAt:
              type: string
              description: "加入时间"
  MRGroupMemberPageDTO:
    type: object
    properties:
      content:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            realName:
              type: string
            joinedAt:
              type: string
              description: "加入时间"
      pageInfo:
        $ref: "#/definitions/PageInfo"
  EX40000:
    type: object
    properties:
      message:
        type: string
        example: "请求信息有误"
  EX40001:
    type: object
    properties:
      message:
        type: string
        example: "指定的用户不存在"
  EX40002:
    type: object
    properties:
      message:
        type: string
        example: "指定的角色不存在"
  EX40003:
    type: object
    properties:
      message:
        type: string
        example: "指定的餐厅不存在"
  EX40004:
    type: object
    properties:
      message:
        type: string
        example: "指定的菜单项类型不存在"
  EX40005:
    type: object
    properties:
      message:
        type: string
        example: "指定的菜品类型不存在"
  EX40006:
    type: object
    properties:
      message:
        type: string
        example: "指定的口味类型不存在"
  EX40007:
    type: object
    properties:
      message:
        type: string
        example: "指定的菜单项不存在"
  EX40008:
    type: object
    properties:
      message:
        type: string
        example: "餐厅和菜单项不匹配"
  EX40009:
    type: object
    properties:
      message:
        type: string
        example: "当前菜单项不是单品"
  EX40010:
    type: object
    properties:
      message:
        type: string
        example: "当前菜单项不是套餐"
  EX40300:
    type: object
    properties:
      message:
        type: string
        example: "没有权限访问"
  EX40101:
    type: object
    properties:
      message:
        type: string
        example: "账号或者密码错误，请重新填写"
  EX40102:
    type: object
    properties:
      message:
        type: string
        example: "授权过期，请重新登录"
  EX40400:
    type: object
    properties:
      message:
        type: string
        example: "未找到要访问的资源"
  EX40901:
    type: object
    properties:
      message:
        type: string
        example: "用户账号已经存在"
  EX50000:
    type: object
    properties:
      message:
        type: string
        example: "服务器发生异常，请联系开发人员"